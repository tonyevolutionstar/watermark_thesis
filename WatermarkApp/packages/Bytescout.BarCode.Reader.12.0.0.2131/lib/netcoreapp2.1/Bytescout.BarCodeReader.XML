<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bytescout.BarCodeReader</name>
    </assembly>
    <members>
        <member name="T:Bytescout.BarCodeReader.BarcodeException">
            <summary>
            Represents errors that occur during <see cref="N:Bytescout.BarCodeReader" /> class library execution.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.BarcodeException" /> class with a specified error message.
            </summary>
            <param name="message">The exception message that describes the error.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.BarcodeException" /> class with a specified error message and inner exception.
            </summary>
            <param name="message">The exception message that describes the error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.BarCodeReader.InvalidPasswordException">
            <summary>
            Represents invalid password error that occurs during PDF document loading.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.InvalidPasswordException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.InvalidPasswordException" /> class with a specified error message.
            </summary>
            <param name="message">The exception message that describes the error.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.InvalidPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.InvalidPasswordException" /> class with a specified error message and inner exception.
            </summary>
            <param name="message">The exception message that describes the error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.BarCodeReader.BarcodeFoundEventArgs">
            <summary>
            Contains event arguments used by <see cref="T:Bytescout.BarCodeReader.Reader.BarcodeFoundEventHandler" /></summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeFoundEventArgs.#ctor(Bytescout.BarCodeReader.FoundBarcode,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.BarcodeFoundEventArgs" /> class.
            </summary>
            <param name="barcode">The found barcode.</param>
            <param name="count">The number of barcodes found during last 
            read session (including this one).</param>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeFoundEventArgs.Barcode">
            <summary>
            Gets the information about last found barcode.
            </summary>
            <value>The information about last found barcode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeFoundEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to abort barcode detection.
            </summary>
            <value>
                <c>true</c> if to abort barcode detection; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeFoundEventArgs.Count">
            <summary>
            Gets the number of barcodes found during last read session.
            </summary>
            <value>The number of barcodes found during last read session.</value>
        </member>
        <member name="T:Bytescout.BarCodeReader.BarcodeTypeSelector">
            <summary>
            Defines barcode types to search for.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN8">
            <summary>
            Search for EAN-8 (GTIN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN8">
            <summary>
            Search for GTIN-8 (EAN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN13">
            <summary>
            Search for EAN-13 (GTIN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN13">
            <summary>
            Search for GTIN-13 (EAN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UPCE">
            <summary>
            Search for UPC-E barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UPCA">
            <summary>
            Search for UPC-A barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN12">
            <summary>
            Search for GTIN-12 (UPC-A with 12 symbols) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Interleaved2of5">
            <summary>
            Search for Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.CircularI2of5">
            <summary>
            Search for Circular barcodes based on Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.ITF14">
            <summary>
            Search for ITF-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN14">
            <summary>
            Search for GTIN-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39">
            <summary>
            Search for Code 39 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39Extended">
            <summary>
            Search for Code 39 Extended barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39Mod43">
            <summary>
            Search for Code 39 mod 43.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39Mod43Extended">
            <summary>
            Search for Extended Code 39 mod 43 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PZN">
            <summary>
            Search for PZN, PZN-7, PZN-8 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UPU">
            <summary>
            Search for UPU (Universal Postal Union) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code128">
            <summary>
            Search for Code 128 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN2">
            <summary>
            Search for EAN-2 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN5">
            <summary>
            Search for EAN-5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1">
            <summary>
            Search for GS1-128 (EAN-128) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Codabar">
            <summary>
            Search for Codabar barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Trioptic">
            <summary>
            Search for Trioptic barcodes (variation of Code 39).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PatchCode">
            <summary>
            Search for Patch Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarOmnidirectional">
            <summary>
            Search for GS1 DataBar Omnidirectional barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarExpanded">
            <summary>
            Search for GS1 DataBar Expanded barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarLimited">
            <summary>
            Search for GS1 DataBar Limited barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarStacked">
            <summary>
            Search for GS1 DataBar Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarExpandedStacked">
            <summary>
            Search for GS1 DataBar Expanded Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PDF417">
            <summary>
            Search for PDF-417 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.DataMatrix">
            <summary>
            Search for DataMatrix barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.DPMDataMatrix">
            <summary>
            Search for DPM (Direct Part Marking) DataMatrix barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.QRCode">
            <summary>
            Search for QR Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Aztec">
            <summary>
            Search for Aztec barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MaxiCode">
            <summary>
            Search for MaxiCode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MICR">
            <summary>
            Search for MICR barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.IntelligentMail">
            <summary>
            Search for Intelligent Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.RoyalMail">
            <summary>
            Search for Royal Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.RoyalMailKIX">
            <summary>
            Search for Royal Mail KIX barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.AustralianPostCode">
            <summary>
            Search for Australian Post Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.CodablockF">
            <summary>
            Search for Codablock F barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code16K">
            <summary>
            Search for Code 16K barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PostNet">
            <summary>
            Search for POSTNET barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MicroPDF">
            <summary>
            Search for MicroPDF barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code93">
            <summary>
            Search for Code 93 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MSI">
            <summary>
            Search for MSI barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Pharmacode">
            <summary>
            Search for Pharmacode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Segment">
            <summary>
            Search segments.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Circle">
            <summary>
            Search circles.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Oval">
            <summary>
            Search ovals.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Checkbox">
            <summary>
            Search squares (checkboxes).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Rectangle">
            <summary>
            Search rectangles (including squares).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.HorizontalLine">
            <summary>
            Search horizontal lines.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.VerticalLine">
            <summary>
            Search vertical lines.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UnderlinedField">
            <summary>
            Search underlined fields.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.BorderedTable">
            <summary>
            Search bordered tables.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAll1D">
            <summary>
            Enable all one-dimensional (1D, linear) barcodes except EAN-2, EAN-5, Circular 2 of 5, Patch Code, MSI, Pharmacode
            as they are designed to work without error checking and causing numerous false positives.
            Code 39 Ext, Code39 Mode 43, Code39 Mode 43 Ext are also excluded to avoid duplicates by generic Code 39 decoder.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.All1D">
            <summary>
            Enables or disables all one-dimensional (1D, linear) barcodes except EAN-2, EAN-5, Circular 2 of 5, Patch Code, MSI,
            Pharmacode as they are designed to work without error checking and causing numerous false positives.
            Code 39 Ext, Code39 Mode 43, Code39 Mode 43 Ext are also excluded to avoid duplicates by generic Code 39 decoder.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAll2D">
            <summary>
            Enables all two-dimensional (2D) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.All2D">
            <summary>
            Gets or sets whether to reade all 2D barcodes.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAllOMRElements">
            <summary>
            Enables all OMR (Optical Mark Recognition) elements.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.AllOMRElements">
            <summary>
            Gets or sets whether to recognize all OMR (Optical Mark Recognition) elements.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAll">
            <summary>
            Enables all supported barcodes except EAN-2, EAN-5, Circular 2 of 5, Patch Code, MSI, Pharmacode
            as they are designed to work without error checking and causing numerous false positives.
            Code 39 Ext, Code39 Mode 43, Code39 Mode 43 Ext are also excluded to avoid duplicates by generic Code 39 decoder.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
            <remarks>This method does not include OMR elements.</remarks>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.All">
            <summary>
            Gets or sets whether to search for all supported barcodes except EAN-2, EAN-5, Circular 2 of 5, Patch Code, MSI, Pharmacode
            as they are designed to work without error checking and causing numerous false positives.
            Code 39 Ext, Code39 Mode 43, Code39 Mode 43 Ext are also excluded to avoid duplicates by generic Code 39 decoder.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
            <remarks>This method does not include OMR elements.</remarks>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAny1DSelected">
            <summary>
            Indicates if any 1D (linear) barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAny2DSelected">
            <summary>
            Indicates if any 2D barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAnyOMRElementsSelected">
            <summary>
            Indicates if any OMR (Optical Mark Recognition) element is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAnySelected">
            <summary>
            Indicates if any barcode type is selected currently.
            </summary>
            <remarks>This method does not include OMR elements.</remarks>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.Reset">
            <summary>
            Set all barcode type properties to False.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.FromString(System.String)">
            <summary>
            Returns new instance of <see cref="T:Bytescout.BarCodeReader.BarcodeTypeSelector" /> filled with barcode types from comma-separated list.
            </summary>
            <param name="s">Comma-separated list of barcode types.</param>
            <returns>
                <see cref="T:Bytescout.BarCodeReader.BarcodeTypeSelector" /> instance the you can set to the property <see cref="P:Bytescout.BarCodeReader.Reader.BarcodeTypesToFind" />.</returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.DecoderSpecificOptions">
            <summary>
            Fine-tuning options for specific barcode decoders.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.DataMatrix_MaxHoleSizeInsideLines">
            <summary>
            DataMatrix. Maximum allowed hole in line. Default is 11 (11-pixel or less holes will be consumed.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.DataMatrix_MaxAllowedHoleBetweenLinesInLPattern">
            <summary>
            DataMatrix. Max hole size between horizontal and vertical lines relative to the largest side. Default is 0.15 (15%).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.DataMatrix_LPatternDispersion">
            <summary>
            DataMatrix. Dispersion level of L-pattern dots. Helps to decode some barcodes with damaged L-pattern. Default is 0.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.DataMatrix_DepthOfAnalysis">
            <summary>
            DataMatrix. Dispersion level of L-pattern dots. Helps to decode some barcodes with damaged L-pattern. Default is 0.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.Code128_AllowOneSymbolBarcodes">
            <summary>
            Code 128. Allow barcodes of one-symbol length. Enabling this option may result in unwanted false positives.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.IBarcodeTypeSelector">
            <summary>
            Defines barcode types to search for.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN8">
            <summary>
            Search for EAN-8 (GTIN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN8">
            <summary>
            Search for GTIN-8 (EAN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN13">
            <summary>
            Search for EAN-13 (GTIN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN13">
            <summary>
            Search for GTIN-13 (EAN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UPCE">
            <summary>
            Search for UPC-E barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UPCA">
            <summary>
            Search for UPC-A barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN12">
            <summary>
            Search for GTIN-12 (UPC-A barcode with 12 symbols) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Interleaved2of5">
            <summary>
            Search for Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.CircularI2of5">
            <summary>
            Search for Circular barcodes based on Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.ITF14">
            <summary>
            Search for ITF-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN14">
            <summary>
            Search for GTIN-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39">
            <summary>
            Search for Code 39 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39Extended">
            <summary>
            Search for Code 39 Extended barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39Mod43">
            <summary>
            Search for Code 39 mod 43.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39Mod43Extended">
            <summary>
            Search for Extended Code 39 mod 43 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PZN">
            <summary>
            Search for PZN, PZN-7, PZN-8 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UPU">
            <summary>
            Search for UPU (Universal Postal Union) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Pharmacode">
            <summary>
            Search for Pharmacode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code128">
            <summary>
            Search for Code 128 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN2">
            <summary>
            Search for EAN-2 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN5">
            <summary>
            Search for EAN-5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1">
            <summary>
            Search for GS1-128 (EAN-128) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Codabar">
            <summary>
            Search for Codabar barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Trioptic">
            <summary>
            Search for Trioptic barcodes (variation of Code 39).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PatchCode">
            <summary>
            Search for Patch Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarOmnidirectional">
            <summary>
            Search for GS1 DataBar Omnidirectional barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarExpanded">
            <summary>
            Search for GS1 DataBar Expanded barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarLimited">
            <summary>
            Search for GS1 DataBar Limited barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarStacked">
            <summary>
            Search for GS1 DataBar Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarExpandedStacked">
            <summary>
            Search for GS1 DataBar Expanded Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PDF417">
            <summary>
            Search for PDF-417 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.DataMatrix">
            <summary>
            Search for DataMatrix barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.DPMDataMatrix">
            <summary>
            Search for DPM (Direct Part Marking) DataMatrix barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.QRCode">
            <summary>
            Search for QR Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Aztec">
            <summary>
            Search for Aztec barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MaxiCode">
            <summary>
            Search for MaxiCode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MICR">
            <summary>
            Search for MICR barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.IntelligentMail">
            <summary>
            Search for Intelligent Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.RoyalMail">
            <summary>
            Search for Royal Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.RoyalMailKIX">
            <summary>
            Search for Royal Mail KIX barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.AustralianPostCode">
            <summary>
            Search for Australian Post Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.CodablockF">
            <summary>
            Search for Codablock F barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code16K">
            <summary>
            Search for Code 16K barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PostNet">
            <summary>
            Search for POSTNET barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MicroPDF">
            <summary>
            Search for MicroPDF barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code93">
            <summary>
            Search for Code 93 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MSI">
            <summary>
            Search for MSI barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.All1D">
            <summary>
            Search for all linear barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.All2D">
            <summary>
            Get or set All 2D barcodes to read.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.All">
            <summary>
            Get or set all barcode types to read.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAll1D">
            <summary>
            Search for for all supported one-dimensional (1D, linear) barcodes except EAN-2 and EAN-5 as they are designed to work without checksums and causing numerous false positives.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAll2D">
            <summary>
            Search for all supported two-dimensional (2D) barcodes.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAll">
            <summary>
            Search for all supported barcodes except EAN-2 and EAN-5 as they are designed to work without checksums and causing numerous false positives.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.Reset">
            <summary>
            Set all barcode type properties to False.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAny1DSelected">
            <summary>
            Indicates if any 1d linear barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAny2DSelected">
            <summary>
            Indicates if any 2D barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAnySelected">
            <summary>
            Indicates if any barcode type is selected currently.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Segment">
            <summary>
            Search segments (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Circle">
            <summary>
            Search circles (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Oval">
            <summary>
            Search ovals (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Checkbox">
            <summary>
            Search checkboxes (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Rectangle">
            <summary>
            Search rectangles.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.HorizontalLine">
            <summary>
            Search horizontal lines (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.VerticalLine">
            <summary>
            Search vertical lines (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UnderlinedField">
            <summary>
            Search underlined fields (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.BorderedTable">
            <summary>
            Search bordered tables.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.AllOMRElements">
            <summary>
            Get or set all OMR (Optical Mark Recognition) elements to recognize.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAllOMRElements">
            <summary>
            Search for all OMR (Optical Mark Recognition) elements.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAnyOMRElementsSelected">
            <summary>
            Indicates if any OMR (Optical Mark Recognition) elements is selected currently.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ColorConversionMode">
            <summary>
            Colors conversion  mode. Controls how colors from the original image are converted into data for further analysis.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.ImageBlocks">
            <summary>
            (0) Block mode. Image colors and brightness analysed by blocks on the go. Unviersal and adaptive. Used by default.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Image">
            <summary>
            (1) Image is analyzed as one large block when converting colors.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Enhancing">
            <summary>
            (2) Alternative mode useful with some dark and unfocused barcode photos.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.NoiseFilter">
            <summary>
            (3) Modified <c>ImageBlocks</c> mode filtering noise using fine Median filter. Useful on some corrupted barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Smoothed">
            <summary>
            (4) Modified <c>ImageBlocks</c> mode dilating darks lines/dots of the barcode. Useful on some corrupted barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.GridFiltering">
            <summary>
            (5) Grid filtering mode. Removes parasite grid artefacts from image background causing slowdown. Useful on scanned graph (plotting) paper.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Threshold">
            <summary>
            (6) Simples and fastest mode with simple cutoff by predefined threshold level.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Legacy">
            <summary>
            (7) Legacy implementation of the default block mode.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.Count">
            <inheritdoc cref="P:System.Collections.Generic.List`1.Count" /> /&gt;
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.GetEnumerator">
            <inheritdoc cref="M:System.Collections.Generic.List`1.GetEnumerator" /> /&gt;
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddMedian">
            <summary>
            Add Median image processing filter with default block size 3.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddBlur">
            <summary>
            Add Blur image processing filter with default block size 2.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddContrast(System.Int32)">
            <summary>
            Add Contrast image processing filter with specified value. Valid values from -100 to 100. 
            0 will not modify the image.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale">
            <summary>
            Add Scale image processing filter with default scale factor 2 (x2 enlargement) and interpolation mode.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Double)">
            <summary>
            Add Scale image processing filter with specified scale factor and default interpolation mode (<see cref="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic" />).
            </summary>
            <param name="scaleFactor">Scale factor. For example: 2.0 - double the size, 0.5 - reduce by half.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Double,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Add Scale image processing filter with specified scale factor and interpolation mode.
            </summary>
            <param name="scaleFactor">Scale factor. For example: 2.0 - double the size, 0.5 - reduce by half.</param>
            <param name="interpolationMode">Interpolation mode (<see cref="T:System.Drawing.Drawing2D.InterpolationMode" />).</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Int32)">
            <summary>
            Add Scale image processing filter with the specified size limit and default interpolation mode (<see cref="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic" />). 
            When the image width or height exceeds the limit, the image proportionally resized to it.
            </summary>
            <param name="autoSizeLimit">Size limit in pixels.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Int32,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Add Scale image processing filter with specified size limit and interpolation mode.
            When the image width or height exceeds the limit, the image proportionally resized to it.
            </summary>
            <param name="autoSizeLimit">Size limit in pixels.</param>
            <param name="interpolationMode">Interpolation mode (<see cref="T:System.Drawing.Drawing2D.InterpolationMode" />).</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Int32,System.Boolean)">
            <summary>
            Add Scale image processing filter with the specified size limit and default interpolation mode (<see cref="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic" />). 
            When the image width or height exceeds the limit, the image proportionally resized to it.
            </summary>
            <param name="autoSizeLimit">Size limit in pixels.</param>
            <param name="enlargeSmallImages">Whether to enlarge small images to the specified limit.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Int32,System.Boolean,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Add Scale image processing filter with specified size limit and interpolation mode.
            When the image width or height exceeds the limit, the image proportionally resized to it.
            </summary>
            <param name="autoSizeLimit">Size limit in pixels.</param>
            <param name="enlargeSmallImages">Whether to enlarge small images to the specified limit.</param>
            <param name="interpolationMode">Interpolation mode (<see cref="T:System.Drawing.Drawing2D.InterpolationMode" />).</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddCropDark">
            <summary>
            Add image processing filter that crops dark margins from the image. May speedup the decoding if multiple barcode types enabled.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddCropLight">
            <summary>
            Add image processing filter that crops light margins from the image. May speedup the decoding if multiple barcode types enabled.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddGamma">
            <summary>
            Add gamma correction filter. May help to distinguish gaps and bars in small blurred barcodes.
            The default gamma correction value is 1.4.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddGamma(System.Double)">
            <summary>
            Add gamma correction filter. May help to distinguish gaps and bars in small blurred barcodes.
            </summary>
            <param name="gamma">Gamma correction value. Try values from 0.5 to 2.0.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddNegate">
            <summary>
            Add image negation filter.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.Clear">
            <inheritdoc cref="M:System.Collections.Generic.List`1.Clear" />
        </member>
        <member name="T:Bytescout.BarCodeReader.Address">
            <summary>
            Represents the address of the person identified in the ID card.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.AbbreviationAttribute">
            <summary>
            Specifies an abbreviated display value for the target.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.CountryAttribute">
            <summary>
            Specifies a country display value for the target.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.DescriptionAttribute">
            <summary>
            Specifies a description for the target.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ParserAttribute">
            <summary>
            Indicates the element this parser is capable of handling.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.IssuerIdentificationNumber">
            <remarks>
            https://www.aamva.org/IIN-and-RID/
            </remarks>
        </member>
        <member name="T:Bytescout.BarCodeReader.Height">
            <summary>
            Represents the height of the person identified in the ID card.
            Heights are approximated when converting between Metric and Imperial units.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Name">
            <summary>
            Represents the name of the person identified in the ID card.
            This can include aliases this person is known by.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Weight">
            <summary>
            Represents the weight of the person identified in the ID card.
            The level of detail provided varies by jurisdiction, as some provide
            no information on weight, others give a range, and some give an exact measurement.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.IWIAImageScanner">
            <summary>
            Base interface for class can be used to call scanner or web-camera and acquire images from it using 
            WIA interface in Windows. This class uses WIA 1 or WIA 2 (automatically checks which one is available)
            uses run-time late binding to call WIA 1 (Windows XP) or 2 (Windows Vista or higher)
            so no additional references are required.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputFiles">
            <summary>
            List of acquired image files
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputFolder">
            <summary>
            output folder for acquired images. User's My Pictures folder by default
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputFileNameTemplate">
            <summary>
            Template for output filename. Default is "scanned"
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.ImageIntent">
            <summary>
            Acquired images intent (Color mode)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputImageFormat">
            <summary>
            Output image format
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.DeviceType">
            <summary>
            Device type to work with. By default works with all still imaging devices
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.ShowDeviceSelectionDialog">
            <summary>
            Show device selection dialog or not (true by default)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.ImageQuality">
            <summary>
            Output image quality. Maximize quality by default
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IWIAImageScanner.Acquire">
            <summary>
            Acquire images from WIA device. Output files are in OutputFiles list
            </summary>
            <returns>true if acquired, false if not</returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.NoiseRemovalFilterType">
            <summary>
            Noise removal filter type.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.NoiseRemovalFilterType.Blur">
            <summary>
            (0) Blur filter
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.NoiseRemovalFilterType.Median">
            <summary>
            (1) Median filter
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.LastDecodingTime">
            <summary>
            LastDecodingTime class represents decoding time information.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.LastDecodingTime.TimingData">
            <summary>
            Represents decoding time spent on decoding of single barcode type with the document rotated at specified angle.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.TimingData.BarcodeType">
            <summary>
            Barcode type.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.TimingData.Angle">
            <summary>
            Document rotation angle.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.TimingData.TimeSpent">
            <summary>
            Time spent on the decoding.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.Timings">
            <summary>
            Time spent on each barcode decoder run.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.ElapsedPreparations">
            <summary>
            Time spent on document preparations.
            </summary>
            <value>The time value.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.ElapsedTotal">
            <summary>
            Total time spent on decoding.
            </summary>
            <value>The time value.</value>
        </member>
        <member name="M:Bytescout.BarCodeReader.LastDecodingTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.LastDecodingTime" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.LastDecodingTime.op_Addition(Bytescout.BarCodeReader.LastDecodingTime,Bytescout.BarCodeReader.LastDecodingTime)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="a">First <see cref="T:Bytescout.BarCodeReader.LastDecodingTime" /> value.</param>
            <param name="b">The second <see cref="T:Bytescout.BarCodeReader.LastDecodingTime" />.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.LicenseInfo">
            <summary>
            License information.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.LicenseType">
            <summary>
            License type.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.UpdatesExpireOn">
            <summary>
            Support and updates expiration date.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.LimitType">
            <summary>
            License limit type.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.LimitTerm">
            <summary>
            License limit term.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.Limit">
            <summary>
            Limit of license units.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.Remainder">
            <summary>
            Number of remaining license units.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.LicenseKey">
            <summary>
            Masked license key (RegistrationKey).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.DLLVersion">
            <summary>
            DLL version.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LicenseInfo.HardwareID">
            <summary>
            Device Hardware ID.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.LicenseInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:Bytescout.BarCodeReader.IReader">
            <summary>
            Base interface for class that reads barcodes from images
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RegistrationName">
            <summary>
            Gets or sets the name part of the registration information.
            </summary>
            <value>The name part of the registration information.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RegistrationKey">
            <summary>
            Gets or sets the key part of registration information.
            </summary>
            <value>The key part of registration information.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomArea">
            <summary>
            Gets or sets custom scan area to find barcodes within.
            </summary>
            <value>Custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaLeft">
            <summary>
            Gets or sets leftmost position of custom scan area to find barcodes within.
            </summary>
            <value>Leftmost position of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaTop">
            <summary>
            Gets or sets topmost position of custom scan area to find barcodes within.
            </summary>
            <value>Topmost position of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaWidth">
            <summary>
            Gets or sets width of custom scan area to find barcodes within.
            </summary>
            <value>Width of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaHeight">
            <summary>
            Gets or sets height of custom scan area to find barcodes within.
            </summary>
            <value>Height of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ScanArea">
            <summary>
            Gets or sets the preset type of the scan area.
            </summary>
            <value>Preset type of the scan area.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.BarcodeTypesToFind">
            <summary>
            Gets or sets the barcode types to search for. 
            </summary>
            <value>The barcode types to find.</value>
            <example>
                <code lang="CS">
            barcode.BarcodeTypesToFind.Code39 = true; 
            barcode.BarcodeTypesToFind.QRCode = true; 
            </code>
                <code lang="VB">
            barcode.BarcodeTypesToFind.Code39 = True 
            barcode.BarcodeTypesToFind.QRCode = True 
            </code>
            </example>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Orientation">
            <summary>
            Gets or sets the barcode orientations to search.
            </summary>
            <value>The barcode orientations to search.</value>
            <remarks>
            Use logical OR operator to set multiple orientations.
            </remarks>
            <example>
                <code lang="CS">
            barcode.Orientation = OrientationType.HorizontalFromLeftToRight | OrientationType.HorizontalFromRightToLeft; 
            </code>
                <code lang="VB">
            barcode.Orientation = OrientationType.HorizontalFromLeftToRight Or OrientationType.HorizontalFromRightToLeft
            </code>
            </example>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.SearchNegative">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters" /> to add the negative filter.
            Gets or sets a value indicating whether to search for negative barcodes.
            </summary>
            <value>
                <c>true</c> if search for negative barcodes; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RequireQuietZones">
            <summary>
            Gets or sets a value indicating whether to require "quiet zones" 
            before and after barcode. "Quiet zone" is a whitespace with width
            larger or equal to one symbol width.
            </summary>
            <value>
                <c>true</c> if to require "quiet zones"; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MaxNumberOfBarcodesPerPage">
            <summary>
            Max number of barcodes to find on document page. Default is 0 (unlimited number of barcodes)
            If you know number of barcodes on the page then you can set this number to save time and make reading faster.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MaxNumberOfBarcodesPerDocument">
            <summary>
            Max number of barcodes to find in document. Default is 0 (unlimited number of barcodes).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.OptimizedProcessingOfLargeImages">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters" /> to add the scaling.
            Get or set optimized processing of large images. Faster but may fail on some fuzzy barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.OptimizedProcessingOfLargeImagesSizeLimit">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters" /> to add the scaling.
            Size limit for optimized processing of large images.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MinimalDataLength">
            <summary>
            Gets or sets the minimal acceptable length of decoded data.
            </summary>
            <value>The minimal acceptable length of decoded data.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MediumTrustLevelCompatible">
            <summary>
            Gets or sets a value indicating medium trust level compatibility.
            </summary>
            <value>
                <c>True</c> if medium trust level compatible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ScanStep">
            <summary>
            Scan interval for linear (1-dimensional) barcodes. Default is 1 (every bitmap row will be scanned).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.AllowOrphanedSupplementals">
            <summary>
            Gets or sets a value indicating whether to allow orphaned
            supplemental barcodes to be decoded.
            </summary>
            <value>
                <c>true</c> if to allow orphaned supplemental barcodes to be
            found; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Version">
            <summary>
            Gets the component version number.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.LicenseInfo">
            <summary>
            Gets license information.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetImagePageCount(System.Drawing.Image)">
            <summary>
            Gets the number of pages in specified image.
            </summary>
            <param name="img">The image whose number of pages to
            retrieve.</param>
            <returns>Count of pages.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetImagePageCount(System.String)">
            <summary>
            Gets the number of pages in specified image file.
            </summary>
            <param name="fileName">The image file whose number of pages to retrieve.</param>
            <returns>Count of pages.</returns>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.FoundBarcodes">
            <summary>
            Gets the array of all barcodes found during last find.
            </summary>
            <value>The array of found barcodes.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.FoundCount">
            <summary>
            Retrieves number of all barcodes found during last find.
            </summary>
            <value>The number of found barcodes.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Profiles">
            <summary>
            Comma-separated list of profiles to apply to the <see cref="T:Bytescout.BarCodeReader.Reader" />.
            Profiles are sets of properties and methods represented as JSON string.
            Check the source code examples installed with the SDK.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.FastMode">
            <summary>
            Gets or set the "fast" mode for linear (1D) barcode types. Works faster but the recognition confidence is worse.
            Use with barcode images of perfect quality.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters">
            <summary>
            Collection of image processing filters applied to image before the barcode decoding. 
            Allows to add multiple filters. Note, the order of adding does matter.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeType(System.Int32)">
            <summary>
            Gets the type of the found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>The type of the found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeValue(System.Int32)">
            <summary>
            Gets the found barcode value.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>The found barcode value.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodePage(System.Int32)">
            <summary>
            Gets the number of page where barcode was found.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>The number of page where barcode was found.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeLeft(System.Int32)">
            <summary>
            Gets the X coordinate of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>The X coordinate of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeTop(System.Int32)">
            <summary>
            Gets the Y coordinate of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>The Y coordinate of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeWidth(System.Int32)">
            <summary>
            Gets the width of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>The width of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeHeight(System.Int32)">
            <summary>
            Gets the height of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>The height of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeConfidence(System.Int32)">
            <summary>
            Gets the confidence level of the found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> array.</param>
            <returns>Confidence level of the barcode</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.Drawing.Bitmap)">
            <summary>
            Reads barcodes from all pages of the <see cref="T:System.Drawing.Bitmap" /> object.
            </summary>
            <param name="bitmap">The Bitmap object containing an image.</param>
            <returns>Array of FoundBarcode objects whose elements describe found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Reads barcodes from the specified page of the <see cref="T:System.Drawing.Bitmap" /> object.
            </summary>
            <param name="bitmap">The Bitmap object to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from the range of pages of the <see cref="T:System.Drawing.Bitmap" /> object.
            </summary>
            <param name="bitmap">The Bitmap object to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.String)">
            <summary>
            Reads barcodes from all pages of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromFile(System.String)">
            <summary>
            Reads barcodes from all pages of the specified image or PDF file. You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.String,System.Int32)">
            <summary>
            Reads barcodes from specified page of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of file to read barcodes from.</param>
            <param name="pageIndex">Zero-based page index to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.String,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from range of pages of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to read barcodes from.</param>
            <param name="pageCount">The number of pages to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromFilePage(System.String,System.Int32)">
            <summary>
            Reads barcodes from specified page of the image in the specified file.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="fileName">Name of the image file to read barcodes
            from.</param>
            <param name="page">Zero-based index of the page to read barcodes from.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromHBitmap(System.IntPtr)">
            <summary>
            Reads barcodes from the image specified by GDI HBITMAP handle.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="hbmp">The HBITMAP handle for an image.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromHBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from the image specified by GDI HBITMAP handle. You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="hbmp">The HBITMAP handle for an image.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream,System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.IO.Stream)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.IO.Stream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.IO.Stream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemory(System.Byte[])">
            <summary>
            Read barcodes from image or PDF file provided as array of bytes.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="bytes">Byte array.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemory(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as array of bytes.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="bytes">Byte array.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemoryCOM(System.Object[])">
            <summary>
            COM/ActiveX: Read barcodes from image or PDF file provided as array of bytes represented by VARIANT values. 
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="byteArray">Byte array.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemoryCOM(System.Object[],System.Int32,System.Int32)">
            <summary>
            COM/ActiveX: Read barcodes from image or PDF file provided as array of bytes represented by VARIANT values.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property. 
            </summary>
            <param name="byteArray">Byte array.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFReadingMode">
            <summary>
            Gets or sets the PDF reading mode:
            PDFReadingMode.RenderPDF (0, default) - render whole page to image, then search for barcodes;
            PDFReadingMode.ExtractEmbeddedImagesOnly - (1) - extract images, then search for barcodes.
            </summary>
            <value>The PDF reading mode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFRenderingResolution">
            <summary>
            Gets or sets the PDF rendering resolution. Default is 200 DPI.
            </summary>
            <value>The PDF rendering resolution.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFRenderText">
            <summary>
            Gets or sets whether to render text objects (font-drawn objects) in PDF documents. <c>true</c> by default.
            </summary>
            <remarks>
            Barcodes in PDF document can be drawn using raster images, vector drawings or fonts.
            If you know exactly how the barcodes are drawn in your input documents,
            disabling unused methods will reduce the number of objects being analyzed and speed up the decoding.
            </remarks>
            <seealso cref="P:Bytescout.BarCodeReader.IReader.PDFRenderImages" />
            <seealso cref="P:Bytescout.BarCodeReader.IReader.PDFRenderVectors" />
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFRenderImages">
            <summary>
            Gets or sets whether to render raster image objects in PDF documents. <c>true</c> by default.
            </summary>
            <remarks>
            Barcodes in PDF document can be drawn using raster images, vector drawings or fonts.
            If you know exactly how the barcodes are drawn in your input documents,
            disabling unused methods will reduce the number of objects being analyzed and speed up the decoding.
            </remarks>
            <seealso cref="P:Bytescout.BarCodeReader.IReader.PDFRenderText" />
            <seealso cref="P:Bytescout.BarCodeReader.IReader.PDFRenderVectors" />
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFRenderVectors">
            <summary>
            Gets or sets whether to render vector objects in PDF documents. <c>true</c> by default.
            </summary>
            <remarks>
            Barcodes in PDF document can be drawn using raster images, vector drawings or fonts.
            If you know exactly how the barcodes are drawn in your input documents,
            disabling unused methods will reduce the number of objects being analyzed and speed up the decoding.
            </remarks>
            <seealso cref="P:Bytescout.BarCodeReader.IReader.PDFRenderText" />
            <seealso cref="P:Bytescout.BarCodeReader.IReader.PDFRenderImages" />
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFOptimizeSplittedParts">
            <summary>
            Removes unused resources from splitted PDF document parts. 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFFontSmoothing">
            <summary>
            Gets or sets whether the font smoothing in PDF is enabled. Default is <c>true</c>.
            </summary>
            <remarks>
            Some barcodes that are drawn using fonts instead of images or vector drawings may not be decoded
            due to font smoothing. Disabling font smoothing can improve recognition. 
            </remarks>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetPdfPageCount(System.String)">
            <summary>
            Returns count of pages in PDF document.
            </summary>
            <param name="pdfFile">PDF file path.</param>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetPdfPageCount(System.IO.Stream)">
            <summary>
            Returns count of pages in PDF document.
            </summary>
            <param name="stream">Stream containing PDF document.</param>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFile(System.String)">
            <summary>
             Reads barcodes from all pages of specified PDF document.
            </summary>
            <param name="fileName">PDF file name.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFile(System.IO.Stream)">
            <summary>
             Reads barcodes from all pages of specified PDF document.
            </summary>
            <param name="stream">PDF file stream.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFilePage(System.String,System.Int32,System.Int32)">
            <summary>
             Reads barcodes from specified pages of PDF document.
            </summary>
            <param name="fileName">PDF file name.</param>
            <param name="startPage">Zero-based start page index.</param>
            <param name="pageCount">Count of pages to process from the start page. Specify -1 for all pages.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFilePage(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
             Reads barcodes from specified pages of PDF document.
            </summary>
            <param name="stream">PDF file stream.</param>
            <param name="startPage">Zero-based start page index.</param>
            <param name="pageCount">Count of pages to process from the start page. Specify -1 for all pages.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RemoveNoize">
            <summary>
            Removes noise from the image being processed. 
            Use this option with bad quality scanned images.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.NoiseRemovalFilterSize">
            <summary>
            Block size of noise removal filter. Default is 1.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.NoiseRemovalFilterType">
            <summary>
            Noise removal filter type, Blur or Median. Default is Blur.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ColorConversionMode">
            <summary>
            Colors conversion mode. Default is <see cref="F:Bytescout.BarCodeReader.ColorConversionMode.ImageBlocks" />.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.HeuristicMode">
            <summary>
            Automatic analysis mode that tries to find fuzzy barcodes by variating internal parameters. 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Contrast">
            <summary>
            Image contrast adjustment. Valid values from -100 to 100. Default is 0 (no adjustment).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.DecodingTimeOut">
            <summary>
            Timeout (in milliseconds) for the decoding process for one barcode type and per page.
            Default is 0 (zero), disabled.
            Set to timeout in milliseconds to check timeout time while decoding.
            If decoding takes longer than timeout then the SDK aborts decoding and throws BarcodeReaderDecodingTimeoutException is thrown.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.LastDecodingTimeOutExceeded">
            <summary>
            This property indicates if last decoding timeout was exceeded (and the decoding was aborted) 
            so results may lack some barcodes.
            To enable the timeout set <see cref="P:Bytescout.BarCodeReader.IReader.DecodingTimeOut" /> to non-zero value (in milliseconds).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.LastDecodingTime">
            <summary>
            Gets the time that last decoding process took.
            </summary>
            <value>The time that last decoding process took.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.TextEncoding">
            <summary>
            Text Encoding to decode barcode value. Set to System.Text.Encoding.Default by default (i.e. set to the default locale code page according to the Windows you run the SDK on). 
            You may override this value like: 
            reader.Encoding = System.Text.Encoding.GetEncoding(1250); // to use German locale to decode text
            ActiveX interface: please use .TextEncodingCodePage property instead
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.TextEncodingCodePage">
            <summary>
            property for use via ActiveX interface: get or set CodePage to change code page to decode barcode text. This value is set to default code page value for this computer
            You may override this value like: 
            reader.TextEncodingCodePage = 1250; // to use German locale to decode text
            .NET interface: please use .TextEncoding property instead
            Some of available code pages are listed below for your reference: 
            Name               CodePage  BodyName           HeaderName         WebName            Encoding.EncodingName
            shift_jis          932       iso-2022-jp        iso-2022-jp        shift_jis          Japanese (Shift-JIS)
            windows-1250       1250      iso-8859-2         windows-1250       windows-1250       Central European (Windows)
            windows-1251       1251      koi8-r             windows-1251       windows-1251       Cyrillic (Windows)
            Windows-1252       1252      iso-8859-1         Windows-1252       Windows-1252       Western European (Windows)
            windows-1253       1253      iso-8859-7         windows-1253       windows-1253       Greek (Windows)
            windows-1254       1254      iso-8859-9         windows-1254       windows-1254       Turkish (Windows)
            csISO2022JP        50221     iso-2022-jp        iso-2022-jp        csISO2022JP        Japanese (JIS-Allow 1 byte Kana)
            iso-2022-kr        50225     iso-2022-kr        euc-kr             iso-2022-kr        Korean (ISO)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.TextEncodingUseUTF8">
            <summary>
            ActiveX interface: Enables UTF8 text encoding for use for barcode value decoding 
            .NET interface: Use .TextEncoding property and set it to System.Text.Encoding.UTF8 if you need to
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.SplitDocument(System.String,System.String,System.String,System.Int32)">
            <summary>
             Splits specified PDF or TIFF document to two documents at specified page.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document file name to split.</param>
            <param name="destinationDocument1">First output document file name.</param>
            <param name="destinationDocument2">Second output document file name.</param>
            <param name="splitAtPageNumber">1-based page number to split at. It will be first page of the second document.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.SplitDocument(System.String,System.String)">
            <summary>
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>List of files of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.SplitDocumentCOM(System.String,System.String)">
            <summary>
            COM/ActiveX compatible function for Split(string sourceDocument, string ranges) that returns string with filenames delimited by line feed \n
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>Array of file names of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExtractPageFromDocument(System.String,System.String,System.Int32)">
            <summary>
             Extracts specified page from PDF or TIFF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document to split.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="pageNumber">1-based page number to extract.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToXML(System.String)">
            <summary>
            Exports found barcodes to XML file.
            </summary>
            <param name="fileName">Output XML file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToXML">
            <summary>
            Exports found barcodes to XML string.
            </summary>
            <returns>XML string containing found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToJSON(System.String)">
            <summary>
            Exports found barcodes to JSON file.
            </summary>
            <param name="fileName">Output JSON file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToJSON">
            <summary>
            Exports found barcodes to JSON string.
            </summary>
            <returns>JSON string containing found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToXMLDocument(System.Boolean)">
            <summary>
            Exports found barcodes to XML document.
            </summary>
            <returns>
                <see cref="T:System.Xml.XmlDocument" /> containing found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String)">
            <summary>
            Exports found barcodes to CSV file with default delimiter (,) and quotation (") symbols.
            </summary>
            <param name="fileName">Output CSV file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String,System.String,System.String)">
            <summary>
            Exports found barcodes to CSV file with specified delimiter and quotation symbols.
            </summary>
            <param name="fileName">Output CSV file name.</param>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Exports found barcodes to CSV file with specified delimiter, quotation symbol, and character encoding.
            </summary>
            <param name="fileName">Output CSV file name.</param>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
            <param name="encoding">Character encoding. Default is UTF-8.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV">
            <summary>
            Exports found barcodes to CSV format with default delimiter (,) and quotation (") symbols.
            </summary>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in CSV format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String,System.String)">
            <summary>
            Exports found barcodes to CSV format with specified delimiter and quotation symbols.
            </summary>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in CSV format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToTXT(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Exports found barcodes to plain text file (TXT).
            </summary>
            <param name="fileName">Output TXT file name.</param>
            <param name="onlyValues">Whether to export only barcode values.</param>
            <param name="encoding">Characters encoding. Default is UTF-8.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToTXT(System.Boolean)">
            <summary>
            Save found barcodes in plain text format (TXT).
            </summary>
            <param name="onlyValues">Whether to export only barcode values.</param>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in plain text format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.LoadProfiles(System.String)">
            <summary>
            Loads profiles from file. IMPORTANT: you will need to select profile using .Profiles to apply it.
            You can switch between profiles using .Profiles property to set profile name.
            If you use simplified profiles format then default profile name is `profile1`
            To apply mulitple profiles please use comma separated list, e.g.: `profile1, profile2`. Or `profile1` for one single profile.
            </summary>
            <param name="fileName">JSON file containing profiles.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.LoadProfilesFromFileAndApply(System.String)">
            <summary>
            Loads profiles from file and applies immediately.
            You can switch between profiles using .Profiles property to set profile name.
            If you use simplified profiles format then default profile name is `profile1`
            To apply mulitple profiles please use comma separated list, e.g.: `profile1, profile2`. Or `profile1` for one single profile.
            </summary>
            <param name="fileName">JSON file containing profiles.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.LoadProfilesFromString(System.String)">
            <summary>
            Loads profiles from JSON string. IMPORTANT: you will need to select profile using .Profiles to apply it.
            You can switch between profiles using .Profiles property to set profile name.
            If you use simplified profiles format then default profile name is `profile1`
            To apply mulitple profiles please use comma separated list, e.g.: `profile1, profile2`. Or `profile1` for one single profile.
            </summary>
            <param name="jsonString">JSON string containing profiles.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.LoadAndApplyProfiles(System.String)">
            <summary>
            Loads profiles from JSON string and automatically applies them. 
            IMPORTANT: you will need to select profile using .Profiles to apply it.
            You can switch between profiles using .Profiles property to set profile name.
            If you use simplified profiles format then default profile name is `profile1`
            To apply mulitple profiles please use comma separated list, e.g.: `profile1, profile2`. Or `profile1` for one single profile.
            </summary>
            <remarks>Note, all existing profiles are discarded before loading profiles from the provided string.</remarks>
            <param name="jsonString">JSON string containing profiles.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.CreateProfile(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates JSON profile will all Reader properties with current values.
            </summary>
            <param name="profileName">Name of profile (without spaces).</param>
            <param name="outputFileName">Output file name.</param>
            <param name="indented">Set to <c>true</c> if you need indented JSON.</param>
            <param name="singleQuotes">Set to <c>true</c> if you need single-quoted JSON.</param>
            <param name="simplifiedProfile">Whether to generate the simplified profile that contains only the properties.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.CreateProfile(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates JSON profile will all Reader properties with current values.
            </summary>
            <param name="profileName">Name of profile (without spaces).</param>
            <param name="indented">Set to <c>true</c> if you need indented JSON.</param>
            <param name="singleQuotes">Set to <c>true</c> if you need single-quoted JSON.</param>
            <param name="simplifiedProfile">Whether to generate the simplified profile that contains only the properties.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.DecoderSpecificOptions">
            <summary>
            Fine-tuning options for specific barcode decoders. May affect the decoding speed at the cost of reliability.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.FoundBarcode">
            <summary>
            Holds information about barcode found in image by <see cref="T:Bytescout.BarCodeReader.Reader" />
            class.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Value">
            <summary>
            Gets the found barcode value.
            </summary>
            <value>The found barcode value.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.RawData">
            <summary>
            Gets the found barcode raw data (indexes of encoded data into symbology alphabet(s)).
            </summary>
            <value>The found barcode raw data.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Type">
            <summary>
            Gets the found barcode symbology type.
            </summary>
            <value>The found barcode symbology type.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Rect">
            <summary>
            Gets the found barcode rectangle.
            </summary>
            <value>The found barcode rectangle.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Page">
            <summary>
            Gets the page number in the image file that contains found barcode.
            </summary>
            <value>The page number in the image file that contains found barcode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.File">
            <summary>
            Gets the name of the image file containing found barcode.
            </summary>
            <value>The name of the image file containing found barcode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Confidence">
            <summary>
            Gets the barcode decoding confidence.
            </summary>
            <value>The decoding confidence in range from 0 to 1.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Metadata">
            <summary>
            Contains the barcode metadata for some barcode types.   
            </summary>
            <remarks>
                <para>For PDF417 barcodes that are compliant to AAMVA specification, for example ID cards or driver licenses,
            the Metadata property will contain decoded data as <see cref="T:Bytescout.BarCodeReader.DriversLicense" /> or <see cref="T:Bytescout.BarCodeReader.IdentificationCard" /> object.</para>
            </remarks>
        </member>
        <member name="M:Bytescout.BarCodeReader.FoundBarcode.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.OrientationType">
            <summary>
            Describes barcode orientations to search.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.HorizontalFromLeftToRight">
            <summary>
            (1) Normal unrotated barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.HorizontalFromRightToLeft">
            <summary>
            (16) Flipped horizontal barcodes (180 deg).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopLeftToBottomRight11">
            <summary>
            (32) Barcodes rotated clockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomRightToTopLeft11">
            <summary>
            (64) Flipped barcodes rotated clockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomLeftToTopRight11">
            <summary>
            (128) Barcodes rotated counterclockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopRightToBottomLeft11">
            <summary>
            (256) Flipped barcodes rotated counterclockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopLeftToBottomRight22">
            <summary>
            (512) Barcodes rotated clockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomRightToTopLeft22">
            <summary>
            (1024) Flipped barcodes rotated clockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomLeftToTopRight22">
            <summary>
            (2048) Barcodes rotated counterclockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopRightToBottomLeft22">
            <summary>
            (4096) Flipped barcodes rotated counterclockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopLeftToBottomRight45">
            <summary>
            (4) Barcodes rotated clockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomRightToTopLeft45">
            <summary>
            (8192) Flipped barcodes rotated clockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomLeftToTopRight45">
            <summary>
            (8) Barcodes rotated counterclockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopRightToBottomLeft45">
            <summary>
            (16384) Flipped barcodes rotated counterclockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.VerticalFromTopToBottom">
            <summary>
            (2) Barcodes rotated clockwise by about 90 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.VerticalFromBottomToTop">
            <summary>
            (32768) Flipped barcodes rotated counterclockwise by about 90 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.Default">
            <summary>
            (17) Default orientations for faster processing: HorizontalFromLeftToRight | HorizontalFromRightToLeft.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.HorizontalAndVertical">
            <summary>
            (32787) Horizontal and vertical orientations (HorizontalFromLeftToRight | HorizontalFromRightToLeft | VerticalFromBottomToTop | VerticalFromTopToBottom). 
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.SearchAll">
            <summary>
            (65535) All orientations.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.PDFReadingMode">
            <summary>
            PDF files processing modes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.PDFReadingMode.RenderPDF">
            <summary>
            (0) Render whole page to image, then search for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.PDFReadingMode.ExtractEmbeddedImagesOnly">
            <summary>
            (1) Extract images, then search for barcodes.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Reader">
            <summary>
            Reads barcodes from images.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Reader.BarcodeFoundEventHandler">
            <summary>
            Handles the BarcodeFound events
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Bytescout.BarCodeReader.BarcodeFoundEventArgs" /> instance containing the found barcode information.</param>
        </member>
        <member name="E:Bytescout.BarCodeReader.Reader.BarcodeFound">
            <summary>
            Occurs when barcode found during read session.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Reader.PasswordEventHandler">
            <summary>
            Represents parameters for <see cref="E:Bytescout.BarCodeReader.Reader.PDFDocumentPasswordRequired" /> event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="password">Request user for the password and set it to this variable.</param>
        </member>
        <member name="E:Bytescout.BarCodeReader.Reader.PDFDocumentPasswordRequired">
            <summary>
            Occurs when the password required to decrypt PDF document.
            </summary>
            <seealso cref="T:Bytescout.BarCodeReader.Reader.PasswordEventHandler" />
        </member>
        <member name="T:Bytescout.BarCodeReader.Reader.InspectDecodedBarcodesEventHandler">
            <summary>
            Represents parameters for <see cref="E:Bytescout.BarCodeReader.Reader.InspectDecodedBarcodes" /> event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="image">
                <see cref="T:System.Drawing.Image" /> object with visually highlighted decoded barcodes.</param>
        </member>
        <member name="E:Bytescout.BarCodeReader.Reader.InspectDecodedBarcodes">
            <summary>
            The event occurs for every processed document page and provides the page as <see cref="T:System.Drawing.Image" /> object
            with visually highlighted decoded barcodes.
            </summary>
            <remarks>Note, you should explicitly dispose the image object to avoid resource leaks.</remarks>
            <seealso cref="T:Bytescout.BarCodeReader.Reader.InspectDecodedBarcodesEventHandler" />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.Reader" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.Reader" /> class.
            </summary>
            <param name="registrationName">Registration (license) name.</param>
            <param name="registrationKey">Registration (license) key.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.Dispose">
            <summary>
            Releases managed resources of the component.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RegistrationName">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RegistrationKey">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.DecoderSpecificOptions">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomArea">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaLeft">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaTop">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaWidth">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaHeight">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ScanArea">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.BarcodeTypesToFind">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Orientation">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.SearchNegative">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RequireQuietZones">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MaxNumberOfBarcodesPerPage">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.DecodingTimeOut">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.LastDecodingTimeOutExceeded">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MaxNumberOfBarcodesPerDocument">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ScanStep">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.AllowOrphanedSupplementals">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MinimalDataLength">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MediumTrustLevelCompatible">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.LastDecodingTime">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.OptimizedProcessingOfLargeImages">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.OptimizedProcessingOfLargeImagesSizeLimit">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RemoveNoize">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.NoiseRemovalFilterSize">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.NoiseRemovalFilterType">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Contrast">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ColorConversionMode">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.HeuristicMode">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.TextEncoding">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.TextEncodingCodePage">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.TextEncodingUseUTF8">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Version">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.LicenseInfo">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.FoundBarcodes">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.FoundCount">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Profiles">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.FastMode">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFReadingMode">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFRenderingResolution">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFRenderText">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFRenderImages">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFRenderVectors">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFOptimizeSplittedParts">
            <inheritdoc />
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFFontSmoothing">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetImagePageCount(System.Drawing.Image)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetImagePageCount(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeType(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeConfidence(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodePage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeLeft(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeTop(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeWidth(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeHeight(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.Drawing.Bitmap)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.Drawing.Bitmap,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromFile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.String,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromFilePage(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromHBitmap(System.IntPtr)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromHBitmap(System.IntPtr,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.IO.Stream,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemory(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemory(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemoryCOM(System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemoryCOM(System.Object[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetPdfPageCount(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetPdfPageCount(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFilePage(System.String,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFile(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFilePage(System.IO.Stream,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.SplitDocument(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.SplitDocument(System.String,System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExtractPageFromDocument(System.String,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.SplitDocumentCOM(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToXML(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToXML">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToXMLDocument(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToJSON(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToJSON">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String,System.String,System.String,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToTXT(System.String,System.Boolean,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToTXT(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.LoadProfiles(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.LoadProfilesFromString(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.LoadAndApplyProfiles(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.CreateProfile(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.CreateProfile(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Bytescout.BarCodeReader.ScanAreaType">
            <summary>
            Describes all supported scan areas.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.Custom">
            <summary>
            (0) Custom scan area set. Use <see cref="P:Bytescout.BarCodeReader.Reader.ScanArea" /> property to read or update scan area.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.TopLeftQuarter">
            <summary>
            (1) Top left quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.TopRightQuarter">
            <summary>
            (2) Top right quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.BottomRightQuarter">
            <summary>
            (4) Bottom right quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.BottomLeftQuarter">
            <summary>
            (8) Bottom left quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.TopHalf">
            <summary>
            (3) Top half of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.BottomHalf">
            <summary>
            (12) Bottom half of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.WholePage">
            <summary>
            (15) Whole page gets scanned for barcodes.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.SymbologyType">
            <summary>
            Describes all supported barcode symbologies (types).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Unknown">
            <summary>
            (0) Indicates that barcode symbology is unknown.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Codabar">
            <summary>
            (1) Codabar barcode (Also known as Ames Code, USD-4, NW-7, 
            Code 2 of 7). Codabar symbology allows only symbols from this 
            string '0123456789-$:/.+' to be encoded. This symbology used 
            for example in libraries and blood banks.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code128">
            <summary>
            (2) Code 128 barcode. It is a very effective, high-density
            symbology which permits the encoding of alphanumeric (subject to
            alphabet selection) data. Code 128 is a very dense code, used
            extensively worldwide.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1">
            <summary>
            (3) GS1-128 symbology (new name for EAN128 symbology).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39">
            <summary>
            (4) Code 39 barcode (aka USD-3, 3 of 9). Code 39 symbology allows 
            all ASCII symbols to be encoded in extended mode or symbols from
            this string "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%" in 
            standard mode. This symbology used for example by U.S. Government 
            and military, required for DoD applications.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.I2of5">
            <summary>
            (5) Interleaved 2 of 5 barcode (also known as Code 2 of 5 Interleaved). 
            Interleaved 2 of 5 symbology allows only numeric values to be 
            encoded. This symbology is used primarily in the distribution 
            and warehouse industry.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN13">
            <summary>
            (6) EAN-13 barcode. Used with consumer products internationally.
            EAN-13 symbology allows only numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN8">
            <summary>
            (7) EAN-8 barcode. This symbology is a short version of EAN-13 that
            is intended to be used on packaging which would be otherwise 
            too small to use one of the other versions. Used with consumer 
            products internationally. EAN-8 symbology allows only numeric 
            values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UPCA">
            <summary>
            (8) UPC-A barcode. Used with consumer products in U.S. UPC-A
            symbology allows only numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UPCE">
            <summary>
            (9) UPC-E barcode. This symbology is zero-suppression version 
            of UPC-A. It is intended to be used on packaging which would 
            be otherwise too small to use one of the other versions. The 
            code is smaller because it drops out zeros which would otherwise 
            occur in a symbol. Used with consumer products in U.S. 
            UPC-E symbology allows only numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN2">
            <summary>
            (10) The EAN-2 (Also known as EAN/2 and EAN 2) is a supplement to 
            the EAN-13 and UPC-A barcodes. It is often used on magazines 
            and periodicals to indicate an issue number.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN5">
            <summary>
            (11) The EAN-5 (Also known as EAN/5 and EAN 5) is a supplement to
            EAN-13 and UPC-A barcodes. It is often used to give a 
            suggestion for the price of the book.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PDF417">
            <summary>
            (12) PDF417 symbology. This symbology is heavily used in the parcel 
            industry. The PDF417 symbology can encode a vast amount of data 
            into a small space. This symbology allows a maximum data size of 
            1850 text characters, or 2710 digits. 
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.DataMatrix">
            <summary>
            (13) DataMatrix symbology. The most popular application for DataMatrix 
            is marking small items. The Data Matrix can encode text
            and raw data. Usual data size is from a few bytes up to 2 kilobytes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.QRCode">
            <summary>
            (14) QR Code symbology. QR Code initially was used for tracking
            parts in vehicle manufacturing, but now QR Codes used in a much
            broader context, including both commercial tracking applications
            and convenience-oriented applications aimed at mobile phone
            users (known as mobile tagging).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Aztec">
            <summary>
            (15) Aztec symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.TriopticCode39">
            <summary>
            (16) Trioptic Code 39 symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PatchCode">
            <summary>
            (17) Patch Code symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarOmnidirectional">
            <summary>
            (18) GS1 DataBar Omnidirectional symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarExpanded">
            <summary>
            (19) GS1 DataBar Expanded symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarLimited">
            <summary>
            (20) GS1 DataBar Limited symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarStacked">
            <summary>
            (21) GS1 DataBar Stacked symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarExpandedStacked">
            <summary>
            (22) GS1 DataBar Expanded Stacked symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MaxiCode">
            <summary>
            (23) MaxiCode symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MICR">
            <summary>
            (24) MICR symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.IntelligentMail">
            <summary>
            (25) USPS Intelligent Mail symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.RoyalMail">
            <summary>
            (26) Royal Mail symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.RoyalMailKIX">
            <summary>
            (27) Royal Mail KIX symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.AustralianPostCode">
            <summary>
            (28) Australian Post 4 State Customer Code symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.CodablockF">
            <summary>
            (29) Codablock F symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code16K">
            <summary>
            (30) Code 16K symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PostNet">
            <summary>
            (31) PostNet symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MicroPDF">
            <summary>
            (32) MicroPDF symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code93">
            <summary>
            (33) Code 93 symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MSI">
            <summary>
            (34) MSI symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.ITF14">
            <summary>
            (35) ITF-14 symbology (Interleaved 2 of 5 restricted to 14 symbols).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN14">
            <summary>
            (36) GTIN-14 barcode (also known as Code 2 of 5 Interleaved with 14 digits). 
            GTIN-14 symbology allows only 14 numeric values to be 
            encoded. This symbology is used primarily in the distribution 
            and warehouse industry.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN13">
            <summary>
            (37) GTIN-13 barcode. Used with consumer products internationally.
            GTIN-13 symbology allows only 13 numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN8">
            <summary>
            (38) GTIN-8 barcode. This symbology is a short version of GTIN-13 that
            is intended to be used on packaging which would be otherwise 
            too small to use one of the other versions. Used with consumer 
            products internationally. GTIN-8 symbology allows only 8 numeric 
            values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN12">
            <summary>
            (39) GTIN-12 barcode. Used with consumer products in U.S. GTIN-12
            symbology allows only 12 numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.CircularI2of5">
            <summary>
            (40) Circular variation of Interleaved 2 of 5 barcode.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PZN">
            <summary>
            (41) PZN barcode. German Pharmacy Barcode.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Pharmacode">
            <summary>
            (42) Pharmacode, also known as Pharmaceutical Binary Code, is a barcode standard, used in the pharmaceutical industry as a packing control system. 
            It is designed to be readable despite printing errors.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39Ext">
            <summary>
            (43) Extended Code 39 barcode symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39Mod43">
            <summary>
            (44) Code 39 mod 43 barcode symbology. This is Code 39 with modulo 43 check digit.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39Mod43Ext">
            <summary>
            (45) Code 39 mod 43 Extended barcode symbology. This is Extended Code 39 with modulo 43 check digit.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UPU">
            <summary>
            (46) UPU (Universal Postal Union) barcode symbology. This is the Code 39 with modulo 11 check digit.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Segment">
            <summary>
            (47) Segment element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Circle">
            <summary>
            (48) Circle element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Oval">
            <summary>
            (49) Oval element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Checkbox">
            <summary>
            (50) Checkbox element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.HorizontalLine">
            <summary>
            (51) Horizontal line element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.VerticalLine">
            <summary>
            (52) Vertical line element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UnderlinedField">
            <summary>
            (53) Underlined field element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Table">
            <summary>
            (54) Bordered table element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.DPMDataMatrix">
            <summary>
            (55) DPM (Direct Part Marking) DataMatrix symbology.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaDeviceType">
            <summary>
            Device types supported by WIA.
             http://msdn.microsoft.com/en-us/library/ms630792(v=VS.85).aspx
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.UnspecifiedDeviceType">
            <summary>
            (0) Unspecified device type.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.ScannerDeviceType">
            <summary>
            (1) Scanner device type.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.CameraDeviceType">
            <summary>
            (2) Camera device type.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.VideoDeviceType">
            <summary>
            (3) Video device type.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaImageIntent">
            <summary>
            Image color modes
            http://msdn.microsoft.com/en-us/library/ms630798(v=VS.85).aspx
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.UnspecifiedIntent">
            <summary>
            (0) Unspecified intent.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.ColorIntent">
            <summary>
            (1) Color intent.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.GrayscaleIntent">
            <summary>
            (2) Grayscale intent.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.TextIntent">
            <summary>
            (4) Text intent.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaImageBias">
            <summary>
            Image quality options. See http://msdn.microsoft.com/en-us/library/ms630796(v=VS.85).aspx
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageBias.MinimizeSize">
            <summary>
            (65536) Minimize size.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageBias.MaximizeQuality">
            <summary>
            (131072) Maximize quality.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaImageFormatType">
            <summary>
            Image format to save acquired images to.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.BMP">
            <summary>
            (0) BMP.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.PNG">
            <summary>
            (1) PNG.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.GIF">
            <summary>
            (2) GIF.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.JPEG">
            <summary>
            (3) JPG.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.TIFF">
            <summary>
            (4) TIFF.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAException">
            <summary>
            WIA exception class to raise exceptions.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.WIAException" /> class with a specified error message.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.WIAException" /> class with a specified error message.
            </summary>
            <param name="message">The exception message that describes the error.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAException.#ctor(System.String,System.Exception)">
            <summary></summary>
            <param name="message">The exception message that describes the error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAExceptionWIA2IsNotAvailable">
            <summary>
            Indicates that no WIA 2.0 interface is available.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAExceptionWIA1IsNotAvailable">
            <summary>
            Indicates that no WIA 1.0 interface is available.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAImageScanner">
            <summary>
            This class can be used to call scanner or web-camera and acquire images from it using WIA interface in Windows.
            This class uses WIA 1 or WIA 2 (automatically checks which one is available)
            uses run-time late binding to call WIA 1 (Windows XP) or 2 (Windows Vista or higher)
            so no additional references are required.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAImageScanner.#ctor">
            <summary>
            Creates image scanner object.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFiles">
            <summary>
            List of acquired image files.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFilesCOM">
            <summary>
            List of acquired image files in ActiveX/COM compatible array.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFolder">
            <summary>
            Output folder for acquired images. User's "My Pictures" folder is default.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFileNameTemplate">
            <summary>
            Template for output filename. Default is "scanned".
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.ImageIntent">
            <summary>
            Acquired images intent (Color mode).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputImageFormat">
            <summary>
            Output image format. Default is PNG.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.DeviceType">
            <summary>
            Device types to work with. Default is UnspecifiedDeviceType so it works with almost all web camera and scanner devices.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.ShowDeviceSelectionDialog">
            <summary>
            Show device selection dialog or not (true by default).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.ImageQuality">
            <summary>
            Output image quality. Maximize quality by default.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAImageScanner.Acquire">
            <summary>
            Acquire images from WIA device. Output files are in OutputFiles list.
            </summary>
            <returns>True if acquired, otherwise false.</returns>
        </member>
    </members>
</doc>